inputs:
  SSH_KEY:
    description: 'SSH identity'
    required: true
  SSH_PASSPHRASE:
    description: 'Passphrase for SSH identity'
    required: true
  SSH_USER:
    description: 'SSH remote user'
    required: true
  SSH_HOST:
    description: 'SSH remote host'
    required: true
  SSH_PORT:
    description: 'SSH port on remote host (default 22)'
    required: false
    default: 22  
  RSYNC_OPTIONS:
    description: 'additional rsync options'
    required: false
    default: '--dry-run'
  RSYNC_LOCAL_PATH:
    description: 'rsync local source path'
    required: false
    default: '.'
  RSYNC_REMOTE_PATH:
    description: 'rsync remote destination path (default .)'
    required: false
    default: '.'
runs:
  using: "composite"
  steps:
  - name: Save SSH id to file
    run: |
      install -D -m 600 /dev/null ~/.ssh/id
      echo '${{ inputs.SSH_KEY }}' > ~/.ssh/id
    shell: sh
  - name: Start agent
    run: ssh-agent -a ~/.ssh/agent.socket > ~/.ssh/agent.env
    shell: sh
  - name: Create ssh config
    run: |
      cat > ~/.ssh/config <<-Here
      StrictHostKeyChecking accept-new
      IdentityFile ~/.ssh/id
      IdentitiesOnly yes
      User ${{ inputs.SSH_USER }}
      Host remote
      Hostname ${{ inputs.SSH_HOST }}
      Port ${{ inputs.SSH_PORT }}
      Here
    shell: sh
  - name: Debug config
    run: cat ~/.ssh/config
    shell: sh
  - name: Add identity
    run: echo '${{ inputs.SSH_PASSPHRASE }}' | ssh-add ~/.ssh/id
    env:
      SSH_AUTH_SOCK: "~/.ssh/agent.socket"
    shell: sh
  - name: List identities
    run:  |
      . ~/.ssh/agent.env
      ssh-add -l
    shell: sh
  - name: Transfer files
    run: |
      . ~/.ssh/agent.env
      rsync --exclude '.*' --recursive --delete-excluded ${{ inputs.RSYNC_OPTIONS }} --verbose '${{ inputs.RSYNC_LOCAL_PATH }}' 'remote:${{ inputs.RSYNC_REMOTE_PATH }}'
    shell: sh
  - name: Kill agent and clean up
    if: success() || failure()
    run: |
      . ~/.ssh/agent.env
      ssh-agent -k
      rm ~/.ssh/id
    shell: sh
