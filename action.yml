inputs:
  RSYNC_LOCAL_PATH:
    description: 'rsync local source path'
    required: false
    default: '.'
  RSYNC_OPTIONS:
    description: 'additional rsync options'
    required: false
    default: '--dry-run'
env:
  SSH_KEY: ${{ secrets.SSH_KEY }}
  SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_PORT: ${{ secrets.SSH_PORT }}
  RSYNC_REMOTE_PATH: ${{ secrets.RSYNC_REMOTE_PATH }}
  RSYNC_LOCAL_PATH: ${{ inputs.RSYNC_LOCAL_PATH }}
  RSYNC_OPTIONS: ${{ inputs.RSYNC_OPTIONS }}
runs:
  using: "composite"
  steps:
  - name: Save SSH id to file
    run: install -D -m 600 <(echo "${SSH_KEY}") ~/.ssh/id
    shell: sh
  - name: Start agent
    run: ssh-agent -a ~/.ssh/agent.socket > ~/.ssh/agent.env
    shell: sh
  - name: Create ssh config
    run: |
      cat > ~/.ssh/config <<-Here
      StrictHostKeyChecking accept-new
      IdentityFile ~/.ssh/id
      IdentitiesOnly yes
      User ${SSH_USER}
      Host remote
      Hostname ${SSH_HOST}
      Port ${SSH_PORT:-22}
      Here
    shell: sh
  - name: Debug config
    run: cat ~/.ssh/config
    shell: sh
  - name: Add identity
    run: |
      source ~/.ssh/agent.env
      echo "${SSH_PASSPHRASE}" | ssh-add ~/.ssh/id
    shell: sh
  - name: List identities
    run:  |
      source ~/.ssh/agent.env
      ssh-add -l
    shell: sh
  - name: Transfer files
    run: |
      source ~/.ssh/agent.env
      rsync --exclude '.*' --recursive --delete-excluded ${RSYNC_OPTIONS} --verbose ${RSYNC_LOCAL_PATH} 'remote:${RSYNC_REMOTE_PATH:-.}'
    shell: sh
  - name: Kill agent and clean up
    if: success() || failure()
    run: |
      source ~/.ssh/agent.env
      ssh-agent -k
      rm ~/.ssh/id
    shell: sh
